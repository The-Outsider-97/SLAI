sensitive_attributes: ["gender", "age_group", "race", "education_level"]
udhr_json_path: "src/agents/alignment/templates/un_human_rights.json"

alignment_monitor:
  fairness_metrics:
    - demographic_parity
    - equal_opportunity
    - predictive_equality
  ethical_rules:
    privacy: []
    transparency: []
    safety: []
  drift_threshold: 0.15
  audit_frequency: 1000
  
  model_predict_func: {}
  adaptive_weights:
    fairness: 0.4
    ethics: 0.3
    safety: 0.3

bias_detector:
  metrics:
    - demographic_parity
    - equal_opportunity
    - predictive_parity
    - disparate_impact
  alpha: 0.05
  bootstrap_samples: 1000
  min_group_size: 30
  intersectional_depth: 3
  metric_thresholds:
    demographic_parity: 0.1
    equal_opportunity: 0.1
    predictive_parity: 0.1
    disparate_impact: 0.8

alignment_memory:
  replay_buffer_size: 10000
  causal_window: 1000
  drift_threshold: 0.25
  retention_period: 365 # Days
  regressor_type: "bayesian" # of sgd

ethical_constraints:
  safe_energy_threshold: 100.0    # Base threshold
  min_energy_threshold: 30.0      # Absolute minimum threshold
  max_energy_threshold: 200.0     # Absolute maximum threshold
  controller:
    is_active: False
  controlled_process:
    state: []
  safety_constraints:
    physical_harm:  "src/agents/alignment/templates/physical_harm.json"
    psychological_harm: "src/agents/alignment/templates/psychological_harm.json"
  fairness_constraints:
    distribution: "src/agents/alignment/templates/distribution.json"
    procedure: "src/agents/alignment/templates/procedure.json"
  constitutional_rules:
    privacy: "src/agents/alignment/templates/constitutional_rules_privacy.json"
    transparency: "src/agents/alignment/templates/constitutional_rules_transparency.json"
  adaptation_rate: 0.1
  constraint_priorities:
    - 'safety'
    - 'privacy'
    - 'fairness'
    - 'transparency'

causal_model:
  conditional_independence_test: "fisherz"
  graph_file: "models/causal_graph.gml"
  prior_knowledge: ["age->income", "education->income"]
  min_adjacency_confidence: 0.7
  max_parents: 3
  forbidden_edges: []
  required_edges: []
  structure_learning_method: "pc"  # or "tetrad" "fci"
  latent_confounder_detection: True
  tetrad_path: "src/agents/alignment/auditors/tetrad.jar" # ""
  fci_max_conditioning_set: 5
  use_inverse_covariance: True
  significance_level: 0.05

fairness_metrics: {}

counterfactual_auditor:
  perturbation_strategy: 'flip' # Options: 'flip', 'sample_distribution', 'fixed_delta'
  perturbation_magnitude: 0.1
  num_counterfactual_samples: 1
  sensitivity_alpha: 0.05
  corrections:
    levels:
      - threshold: 0.8
        action: "human_intervention"
      - threshold: 0.5
        action: "automatic_adjustment"
      - threshold: 0.3
        action: "alert_only"
  fairness_thresholds:
    individual_fairness_mean_diff: 0.1
    individual_fairness_max_diff: 0.3
    group_disparity_stat_parity: 0.1
    group_disparity_equal_opp: 0.1
    group_disparity_avg_odds: 0.1
    causal_effect_ate: 0.05
    group_stat_parity: {}

fairness_evaluator:
  group_metrics:
    - statistical_parity
    - equal_opportunity
    - predictive_parity
    - disparate_impact
  individual_metrics:
    - consistency_score
    - fairness_radius # Note: fairness_radius was in dataclass but not fully implemented in methods
  alpha: 0.05
  n_bootstrap: 1000
  batch_size: 1000 # Was used in config dataclass, ensure it's used if relevant
  similarity_metric: 'manhattan'

value_embedding:
  embedding_dim: 512
  num_cultural_dimensions: 6
  # num_ethical_principles: will be loaded dynamically from udhr_json_path by default.
  # Can be overridden by uncommenting and setting a value here.
  num_ethical_principles: 30
  temperature: 0.07
  dropout: 0.1
  margin: 0.2
  max_seq_length: 128
  margin: 0.2

value_dataset: {}

value_trainer: {}
